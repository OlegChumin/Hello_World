package lessons.lesson_11;

/**
 * Строка кода javax.swing.SwingUtilities.invokeLater(new Runnable() {...}); используется в
 * Java Swing для того, чтобы гарантировать, что определенный блок кода будет выполнен в потоке
 * обработки событий графического интерфейса пользователя (Event Dispatch Thread, EDT).
 * Давайте разберемся, как это работает и почему это важно.
 * Как это работает
 * javax.swing.SwingUtilities.invokeLater(...): Этот статический метод класса SwingUtilities
 * принимает в качестве аргумента объект, реализующий интерфейс Runnable. Этот объект
 * содержит метод run(), в котором находится код, который нужно выполнить.
 * new Runnable() {...}: Создается анонимный класс, реализующий интерфейс Runnable.
 * Внутри этого класса переопределяется метод run(), в котором и находится код, который
 * должен быть выполнен в потоке EDT.
 * Когда метод invokeLater(...) вызывается, он ставит переданный ему объект Runnable в
 * очередь на выполнение в потоке EDT. Это значит, что код внутри метода run() будет
 * выполнен не сразу, а когда поток обработки событий дойдет до него в своей очереди задач.
 * Почему это важно
 * Swing, как и большинство библиотек для создания графического интерфейса пользователя,
// * не является потокобезопасным. Это означает, что доступ к компонентам интерфейса (таким
// * как кнопки, текстовые поля и т.д.) должен осуществляться исключительно из потока EDT.
 * Этот подход предотвращает возможные проблемы с синхронизацией и гарантирует, что интерфейс
 * пользователя будет отзывчивым и стабильным.
 * Использование invokeLater позволяет разработчику поместить выполнение кода, который изменяет
 * интерфейс или зависит от него, в правильный поток, даже если сам вызов происходит из другого
 * потока (например, из потока обработки входящих сетевых сообщений или из потока, выполняющего
 * длительные вычисления).
 * Таким образом, использование invokeLater в Swing-приложениях является ключевой практикой для
 * обеспечения правильного взаимодействия между потоками и гарантии корректной работы приложения.
 */
public class Main { // Объявляем класс Main
    public static void main(String[] args) { // Определяем метод main как точку входа в программу
        // Обеспечиваем, что интерфейс будет запущен в потоке диспетчеризации событий
// Определяем метод run, который будет выполнен в потоке диспетчеризации событий
// Создаем экземпляр нашего графического интерфейса
        javax.swing.SwingUtilities.invokeLater(GraphicsUserInterface::new);
    }
}
